{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",  
  "parameters": {
    "functionAppName": {
      "type": "string",
      "defaultValue": "[format('github-bot-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Function App"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "eventHubSku": {
      "type": "string",
      "defaultValue": "Basic",
      "metadata": {
        "description": "SKU for the Event Hub namespace"
      }
    },
    "functionAppSku": {
      "type": "string",
      "defaultValue": "Y1",
      "metadata": {
        "description": "SKU for the Function App"
      }
    }
  },
  "variables": {
    "eventHubName": "github",
    "eventHubNamespaceName": "[format('ns-{0}', uniqueString(resourceGroup().id))]",
    "storageAccountName": "[format('storage{0}', uniqueString(resourceGroup().id))]",
    "appServicePlanName": "[format('plan-{0}', parameters('functionAppName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "defaultToOAuthAuthentication": true,
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": false
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('functionAppSku')]"
      },
      "kind": "functionapp",
      "properties": {}
    },    
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2023-01-01-preview",
      "name": "[variables('eventHubNamespaceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('eventHubSku')]",
        "tier": "[parameters('eventHubSku')]",
        "capacity": 1
      },
      "properties": {
        "minimumTlsVersion": "1.2",
        "publicNetworkAccess": "Enabled",
        "disableLocalAuth": false
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2023-01-01-preview",
      "name": "[format('{0}/{1}', variables('eventHubNamespaceName'), variables('eventHubName'))]",
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 1
      },
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
      ]
    },
    {
      "type": "Microsoft.EventHub/namespaces/authorizationRules",
      "apiVersion": "2023-01-01-preview",
      "name": "[format('{0}/{1}', variables('eventHubNamespaceName'), 'RootManageSharedAccessKey')]",
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('eventHubNamespaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "appSettings": [            
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~20"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "EventHubConnectionString",
              "value": "[listKeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('eventHubNamespaceName'), 'RootManageSharedAccessKey'), '2023-01-01-preview').primaryConnectionString]"
            },
            {
              "name": "EventHubName",
              "value": "[variables('eventHubName')]"
            },
            {
              "name": "AzureWebJobsStorage__credential",
              "value": "managedidentity"
            },
            {
              "name": "AzureWebJobsStorage__blobServiceUri",
              "value": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net')]"
            },
            {
              "name": "AzureWebJobsStorage__queueServiceUri",
              "value": "[concat('https://', variables('storageAccountName'), '.queue.core.windows.net')]"
            },
            {
              "name": "AzureWebJobsStorage__tableServiceUri",
              "value": "[concat('https://', variables('storageAccountName'), '.table.core.windows.net')]"
            }
          ],
          "use32BitWorkerProcess": false,
          "ftpsState": "FtpsOnly",
          "minTlsVersion": "1.2",
          "cors": {
            "allowedOrigins": [
              "*"
            ]
          }
        },
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('eventHubNamespaceName'), 'RootManageSharedAccessKey')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/functions",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', parameters('functionAppName'), 'webhook')]",
      "properties": {
        "config": {
          "bindings": [
            {
              "authLevel": "anonymous",
              "type": "httpTrigger",
              "direction": "in",
              "name": "req",
              "methods": [
                "get",
                "post"
              ]
            },
            {
              "type": "http",
              "direction": "out",
              "name": "res"
            },
            {
              "type": "eventHub",
              "direction": "out",
              "name": "outputEventHubMessage",
              "eventHubName": "[variables('eventHubName')]",
              "connection": "EventHubConnectionString"
            }
          ]
        },
        "files": {
          "index.js": "module.exports = async function (context, req) {\n      context.bindings.outputEventHubMessage = req.body;\n context.bindings.outputEventHubMessage.event = req.headers['x-github-event'];\n };\n",
          "package.json": "{\n  \"name\": \"http-eventhub-forwarder\",\n  \"version\": \"1.0.0\",\n  \"description\": \"HTTP to Event Hub forwarder function\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"func start\"\n  }\n}\n"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ]
    },
    {
      "apiVersion": "2022-04-01",
      "name": "[guid(subscription().id, resourceGroup().id, parameters('functionAppName'), '/providers/Microsoft.Authorization/roleDefinitions/b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
      "type": "Microsoft.Authorization/roleAssignments",
      "scope": "[concat('Microsoft.Storage/storageAccounts', '/', variables('storageAccountName'))]",
      "properties": {
        "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-03-01', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "eventHubConnectionString": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('eventHubNamespaceName'), 'RootManageSharedAccessKey'), '2023-01-01-preview').primaryConnectionString]",
      "metadata": {
        "description": "Event Hub connection string"
      }
    },
    "functionUrl": {
      "type": "string",
      "value": "[format('https://{0}/api/webhook', reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2023-01-01').defaultHostName)]",
      "metadata": {
        "description": "Function App URL"
      }
    },
    "eventHubNamespace": {
      "type": "string",
      "value": "[variables('eventHubNamespaceName')]",
      "metadata": {
        "description": "Event Hub namespace name"
      }
    },
    "functionAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]",
      "metadata": {
        "description": "Function App name"
      }
    }
  }
}
