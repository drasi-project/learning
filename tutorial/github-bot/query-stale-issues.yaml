kind: ContinuousQuery
apiVersion: v1
name: stale-issues2
spec:
  mode: query
  sources:
    subscriptions:
      - id: github
        nodes:
          - sourceLabel: github
        pipeline:
          - extract
    middleware:
      - name: extract
        kind: map
        github:
          insert:
            - selector: $.issue
              op: Update
              label: Issue
              id: $['$selected'].id
              properties:
                id: $['$selected'].id
                title: $['$selected'].title
                state: $['$selected'].state
                number: $['$selected'].number
                repo: $.repository.full_name
                created_at: $['$selected'].created_at
            - selector: $.comment
              op: Update
              label: Comment
              id: $['$selected'].id
              properties:
                id: $['$selected'].id
                created_at: $['$selected'].created_at
            - selector: $.comment
              op: Update
              label: HAS
              elementType: 
                Relation:
                  inNodeId: $.issue.id
                  outNodeId: $.comment.id           
              
  query: |
    MATCH 
      (i:Issue)
    OPTIONAL MATCH
      (i)-[:HAS]->(c:Comment)
    WHERE i.state = 'open'
    WITH
      i,
      max(datetime(coalesce(c.created_at, i.created_at))) AS lastCommentTime
    
    WHERE (lastCommentTime + duration({ seconds: 10 })) <= datetime.realtime()  
    OR drasi.trueLater(
        (lastCommentTime + duration({ seconds: 10 })) <= datetime.realtime(), 
        lastCommentTime + duration({ seconds: 10 })
      )
    
    RETURN 
      i.id AS id,       
      i.title AS title,
      i.repo AS repo,
      i.number AS issue_number
